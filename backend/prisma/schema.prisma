generator client {
  provider = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  streams Stream[]
  rtmpConfigurations RtmpConfiguration[]

  @@map("users")
}

model Stream {
  id          String   @id @default(cuid())
  name        String
  description String?
  slug        String   @unique
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user               User                @relation(fields: [userId], references: [id])
  streamConfiguration StreamConfiguration?

  @@map("streams")
}

model StreamConfiguration {
  id        String   @id @default(cuid())
  streamId  String   @unique
  rtmpUrl   String?
  hlsUrl    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stream Stream @relation(fields: [streamId], references: [id])

  @@map("stream_configurations")
}

model RtmpServer {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  rtmpUrl     String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  configurations RtmpConfiguration[]

  @@map("rtmp_servers")
}

model RtmpConfiguration {
  id          String       @id @default(cuid())
  name        String
  rtmpKey     String       @unique
  rtmpServerId String
  status      String       @default("Inactive") // Active, Inactive
  selected    Boolean      @default(false)
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  user       User        @relation(fields: [userId], references: [id])
  rtmpServer RtmpServer  @relation(fields: [rtmpServerId], references: [id])
  brandedUrls BrandedUrl[]
  streamStatus StreamStatus?
  chatMessages ChatMessage[]
  chatConfiguration ChatConfiguration?

  @@map("rtmp_configurations")
}

model BrandedUrl {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  url       String   @unique
  views     Int      @default(0)
  rtmpConfigId String
  color     String?  @default("#3B82F6")
  logoUrl   String?
  overlayText String?
  offlineContent Boolean @default(false)
  offlineMessage String?
  ctaText   String?
  ctaUrl    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rtmpConfig RtmpConfiguration @relation(fields: [rtmpConfigId], references: [id])

  @@map("branded_urls")
}

model StreamStatus {
  id        String   @id @default(cuid())
  streamId  String   @unique
  isLive    Boolean  @default(false)
  viewers   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rtmpConfiguration RtmpConfiguration @relation(fields: [streamId], references: [id])

  @@map("stream_status")
}

model Viewer {
  id        String   @id @default(cuid())
  streamId  String
  sessionId String
  joinedAt  DateTime @default(now())
  leftAt    DateTime?

  @@map("viewers")
}

model ChatUser {
  id        String   @id @default(cuid())
  firstName String
  lastName  String?
  email     String?
  sessionId String   @unique
  isBanned  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages ChatMessage[]

  @@map("chat_users")
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String
  rtmpConfigId String
  userId    String
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rtmpConfig RtmpConfiguration @relation(fields: [rtmpConfigId], references: [id])
  user       ChatUser          @relation(fields: [userId], references: [id])

  @@map("chat_messages")
}

model ChatConfiguration {
  id                String   @id @default(cuid())
  rtmpConfigId      String   @unique
  requireEmail      Boolean  @default(false)
  requireLastName   Boolean  @default(false)
  maxMessageLength  Int      @default(2000)
  isEnabled         Boolean  @default(true)
  moderationEnabled Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  rtmpConfig RtmpConfiguration @relation(fields: [rtmpConfigId], references: [id])

  @@map("chat_configurations")
}