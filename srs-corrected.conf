# SRS Configuration with HTTP Callbacks
listen              1935;
max_connections     1000;
daemon              off;
srs_log_tank        console;

# HTTP API for management
http_api {
    enabled         on;
    listen          1985;
    crossdomain     on;
}

# HTTP Server for HLS and other protocols
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
}

# VHost for live streaming
vhost __defaultVhost__ {
    # Enable live streaming
    live {
        enabled         on;
        gop_cache       off;
        queue_length    10;
        atc             off;
        min_latency     on;
        tcp_nodelay     on;
        send_min_interval 10.0;
        reduce_sequence_header on;
    }
    
    # Enable HLS
    hls {
        enabled         on;
        hls_fragment    10;
        hls_window      60;
        hls_path        ./objs/nginx/html;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
        hls_dispose     30;
        hls_nb_notify   10;
        hls_wait_keyframe on;
    }
    
    # Enable DVR
    dvr {
        enabled         on;
        dvr_path        ./objs/nginx/html/[app]/[stream].[timestamp].flv;
        dvr_plan        session;
        dvr_duration    30;
        dvr_wait_keyframe on;
    }
    
    # Enable WebRTC
    webrtc {
        enabled         on;
        listen          8000;
        candidate       $CANDIDATE;
    }
    
    # HTTP Hooks for real-time events (MUST be inside vhost)
    http_hooks {
        enabled         on;
        on_publish      http://custom-restreamer-backend-1:3001/api/srs-callback;
        on_unpublish    http://custom-restreamer-backend-1:3001/api/srs-callback;
        on_play         http://custom-restreamer-backend-1:3001/api/srs-callback;
        on_stop         http://custom-restreamer-backend-1:3001/api/srs-callback;
        on_hls          http://custom-restreamer-backend-1:3001/api/srs-callback;
        on_dvr          http://custom-restreamer-backend-1:3001/api/srs-callback;
    }
}
