version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: restreamer_db
      POSTGRES_USER: restreamer_user
      POSTGRES_PASSWORD: restreamer123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restreamer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restreamer_user -d restreamer_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.final
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://restreamer_user:restreamer123@custom-restreamer-postgres-1:5432/restreamer_db
      API_BASE_URL: https://restreamer.website
      FRONTEND_URL: https://restreamer.website
      CORS_ORIGIN: https://restreamer.website
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - restreamer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.simple
    environment:
      NEXT_PUBLIC_BASE_URL: https://restreamer.website
    networks:
      - restreamer-network

  srs:
    image: ossrs/srs:6
    ports:
      - "1935:1935"
      - "8080:8080"
    networks:
      - restreamer-network
    volumes:
      - ./srs-v6-flv-correct.conf:/usr/local/srs/conf/srs.conf
    command: ["./objs/srs", "-c", "conf/srs.conf"]
    restart: always

volumes:
  postgres_data:

networks:
  restreamer-network:
    driver: bridge
