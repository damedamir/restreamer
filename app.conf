# Upstream for the Strapi application
upstream strapi {
    server strapi:1337;
}

# Upstream for the custom-restreamer application
upstream restreamer {
    server restreamer-frontend:3000;
}

# Upstream for the restreamer backend
upstream restreamer-backend {
    server restreamer-backend:3001;
}

# Upstream for SRS media server
upstream restreamer-srs {
    server restreamer-srs:8080;
}

# HTTP Blocks (Redirect to HTTPS)
server {
    listen 80;
    server_name cms.restreamer.website;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}
server {
    listen 80;
    server_name hive.restreamer.website;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}
server {
    listen 80;
    server_name restreamer.website;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://hive.restreamer.website$request_uri; }
}


# Strapi Server Block (HTTPS)
server {
    listen 443 ssl;
    http2 on;
    server_name cms.restreamer.website;
    ssl_certificate /etc/letsencrypt/live/cms.restreamer.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cms.restreamer.website/privkey.pem;

    location / {
        proxy_pass http://strapi;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto "https";
        proxy_cookie_path / "/; Secure; HttpOnly; SameSite=None";
    }
}

# Restreamer Server Block (HTTPS)
server {
    listen 443 ssl;
    http2 on;
    server_name hive.restreamer.website;
    ssl_certificate /etc/letsencrypt/live/cms.restreamer.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cms.restreamer.website/privkey.pem;

    # API routes to backend
    location /api/ {
        proxy_pass http://restreamer-backend/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 30s;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
    }

    # SRS API proxy
    location /srs-api/ {
        proxy_pass http://restreamer-srs/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_redirect off;
    }

    # WebRTC proxy to SRS
    location /rtc/ {
        proxy_pass http://restreamer-srs/rtc/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_redirect off;
    }

    # FLV files served from SRS
    location ~ ^/live/(.+)\.flv$ {
        proxy_pass http://restreamer-srs/live/$1.flv;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for FLV
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        
        # No caching for live streams
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Frontend routes
    location / {
        proxy_pass http://restreamer;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Root Domain Redirect Block (HTTPS)
server {
    listen 443 ssl;
    http2 on;
    server_name restreamer.website;
    ssl_certificate /etc/letsencrypt/live/cms.restreamer.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cms.restreamer.website/privkey.pem;

    location / {
        return 301 https://hive.restreamer.website$request_uri;
    }
}
